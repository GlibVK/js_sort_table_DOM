{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAO,EAAM,IAAI,CAEjB,EAAa,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAC7B,EAAU,CAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAEhC,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAe,EAAE,MAAM,CAAC,SAAS,AAEd,CAAA,OAArB,EAAE,MAAM,CAAC,OAAO,EAepB,AAXoB,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,EAAG,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,G,EAAM,KAAK,CAAC,EAAG,IAAI,IAAI,CAAC,SAAC,CAAA,CAAM,CAAtD,EACE,IAAM,EAAQ,EAAK,KAAK,CAAC,EAAa,CAAC,SAAS,CAC1C,EAAQ,EAAK,KAAK,CAAC,EAAa,CAAC,SAAS,QAEhD,AAAI,EAAE,MAAM,GAAK,GAAW,EAAE,MAAM,GAAK,EAChC,CAAC,EAAM,OAAO,CAAC,QAAS,IAAM,CAAC,EAAM,OAAO,CAAC,QAAS,IAEtD,EAAM,aAAa,CAAC,EAE/B,GAEW,OAAO,CAAC,SAAC,CAApB,EAA4B,OAAA,EAAM,MAAM,CAAC,E,EAC3C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar rows = table.rows;\nvar cellSalary = rows[0].cells[3];\nvar cellAge = rows[0].cells[2];\ndocument.addEventListener(\"click\", function(e) {\n    var switchColumn = e.target.cellIndex;\n    if (e.target.tagName === \"TD\") return;\n    var sortedRows = _to_consumable_array(rows).slice(1, -1).sort(function(row1, row2) {\n        var item1 = row1.cells[switchColumn].innerText;\n        var item2 = row2.cells[switchColumn].innerText;\n        if (e.target === cellAge || e.target === cellSalary) return +item1.replace(/[$,]/g, \"\") - +item2.replace(/[$,]/g, \"\");\n        else return item1.localeCompare(item2);\n    });\n    sortedRows.forEach(function(row) {\n        return table.append(row);\n    });\n});\n\n//# sourceMappingURL=index.153acc7d.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst rows = table.rows;\n\nconst cellSalary = rows[0].cells[3];\nconst cellAge = rows[0].cells[2];\n\ndocument.addEventListener('click', (e) => {\n  const switchColumn = e.target.cellIndex;\n\n  if (e.target.tagName === 'TD') {\n    return;\n  }\n\n  const sortedRows = [...rows].slice(1, -1).sort((row1, row2) => {\n    const item1 = row1.cells[switchColumn].innerText;\n    const item2 = row2.cells[switchColumn].innerText;\n\n    if (e.target === cellAge || e.target === cellSalary) {\n      return +item1.replace(/[$,]/g, '') - +item2.replace(/[$,]/g, '');\n    } else {\n      return item1.localeCompare(item2);\n    }\n  });\n\n  sortedRows.forEach((row) => table.append(row));\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","rows","cellSalary","cells","cellAge","addEventListener","e","switchColumn","target","cellIndex","tagName","sortedRows","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","row1","row2","item1","innerText","item2","replace","localeCompare","forEach","row","append"],"version":3,"file":"index.153acc7d.js.map"}